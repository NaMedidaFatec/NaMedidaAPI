{
    "sourceFile": "namedida-api-general/src/main/java/br/com/namedida/core/service/UnidadeEnsinoService.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732451297371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732451297371,
            "name": "Commit-0",
            "content": "package br.com.namedida.core.service;\n\nimport br.com.namedida.core.business.IValidation;\nimport br.com.namedida.core.business.Result;\nimport br.com.namedida.core.persistence.GenericRepository;\nimport br.com.namedida.core.validator.CidadeValidator;\nimport br.com.namedida.core.validator.DepartamentoValidator;\nimport br.com.namedida.domain.*;\nimport br.com.namedida.domain.enums.NivelEnsino;\nimport br.com.namedida.domain.form.EnderecoForm;\nimport br.com.namedida.domain.form.ResponsavelForm;\nimport br.com.namedida.domain.form.UnidadeEnsinoForm;\nimport org.apache.logging.log4j.util.Strings;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class UnidadeEnsinoService extends GenericService<UnidadeEnsino> {\n\n    @Autowired\n    public UnidadeEnsinoService(\n            GenericRepository<UnidadeEnsino> repository,\n            List<IValidation<UnidadeEnsino>> saveValidations,\n            List<IValidation<UnidadeEnsino>> updateValidation)\n    {\n        super();\n        this.repository = repository;\n        this.saveValidations = saveValidations;\n        this.updateValidations = updateValidation;\n    }\n\n    public UnidadeEnsinoService() {\n\n    }\n\n    public Result save(UnidadeEnsinoForm form) throws Exception {\n        EnderecoForm responsavelEnderecoForm;\n        ResponsavelForm responsavelForm;\n        Responsavel responsavel = new Responsavel();\n\n        if (form.getResponsavelForm() != null) {\n            responsavelForm = form.getResponsavelForm();\n            responsavelEnderecoForm = form.getResponsavelForm().getEnderecoForm();\n\n            responsavel = Responsavel.responsavelBuilder()\n                    .cargo(responsavelForm.getCargo())\n                    .setor(responsavelForm.getSetor())\n                    .rg(responsavelForm.getRg())\n                    .cpf(responsavelForm.getCpf())\n                    .apelido(responsavelForm.getApelido())\n                    .dataNascimento(responsavelForm.getDataNascimento())\n                    .nome(responsavelForm.getNome())\n                    .email(responsavelForm.getEmail())\n                    .telefone(Telefone.telefoneBuilder()\n                            .ddd(responsavelForm.getTelefoneForm().getDdd())\n                            .numero(responsavelForm.getTelefoneForm().getNumero()).build())\n                    .endereco(Endereco.enderecoBuilder()\n                            .numero(responsavelEnderecoForm.getNumero())\n                            .logradouro(responsavelEnderecoForm.getLogradouro())\n                            .complemento(responsavelEnderecoForm.getComplemento())\n                            .bairro(responsavelEnderecoForm.getBairro())\n                            .cidade(CidadeValidator.validate(responsavelEnderecoForm.getCidade()))\n                            .cep(responsavelEnderecoForm.getCep()).build())\n                    .build();\n\n            if (Strings.isNotBlank(form.getNivelEnsino())) {\n                responsavel.setEscolariade(NivelEnsino.valueOf(responsavelForm.getNivelEnsino()));\n            }\n        }\n\n        EnderecoForm unidadeEnsinoEnderecoForm = form.getEnderecoForm();\n        UnidadeEnsino unidadeEnsino = UnidadeEnsino.unidadeensinoBuilder()\n                .departamento(DepartamentoValidator.validate(form.getDepartamento()))\n                .horarioAbertura(form.getHorarioAbertura())\n                .cie(form.getCie())\n                .horarioFechamento(form.getHorarioFechamento())\n                .responsavel(responsavel)\n                .qtdAlunosMatriculados(0)\n                .qtdRefeicoes(0)\n                .nome(form.getNome())\n                .razaoSocial(form.getRazaoSocial())\n                .cnpj(form.getCnpj())\n                .email(form.getEmail())\n                .nivelEnsino(NivelEnsino.valueOf(form.getNivelEnsino()))\n                .telefone(Telefone.telefoneBuilder()\n                        .ddd(form.getTelefoneForm().getDdd())\n                        .numero(form.getTelefoneForm().getNumero()).build())\n                .endereco(Endereco.enderecoBuilder()\n                        .numero(unidadeEnsinoEnderecoForm.getNumero())\n                        .logradouro(unidadeEnsinoEnderecoForm.getLogradouro())\n                        .complemento(unidadeEnsinoEnderecoForm.getComplemento())\n                        .bairro(unidadeEnsinoEnderecoForm.getBairro())\n                        .cidade(CidadeValidator.validate(unidadeEnsinoEnderecoForm.getCidade()))\n                        .cep(unidadeEnsinoEnderecoForm.getCep()).build())\n                .build();\n\n        if (Strings.isNotBlank(form.getNivelEnsino())) {\n            unidadeEnsino.setNivelEnsino(NivelEnsino.valueOf(form.getNivelEnsino()));\n        }\n\n        this.executeRules(this.saveValidations, unidadeEnsino);\n\n        if (!this.result.hasErrors()) {\n            this.result.setData(this.repository.save(unidadeEnsino));\n        }\n        return this.result;\n    }\n}"
        }
    ]
}