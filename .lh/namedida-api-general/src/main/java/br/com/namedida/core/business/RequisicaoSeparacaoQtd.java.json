{
    "sourceFile": "namedida-api-general/src/main/java/br/com/namedida/core/business/RequisicaoSeparacaoQtd.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732570664381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732570664380,
            "name": "Commit-0",
            "content": "package br.com.namedida.core.business;\n\nimport br.com.namedida.domain.RequisicaoSeparacaoItem;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.annotation.RequestScope;\n\n@Component\n@RequestScope\npublic class RequisicaoSeparacaoQtd implements IValidation<RequisicaoSeparacaoItem> {\n    private Result result;\n\n    public RequisicaoSeparacaoQtd() {\n        this.result = new Result();\n    }\n\n    @Override\n    public Result execute(RequisicaoSeparacaoItem requisicaoSeparacaoItem) {\n        if (requisicaoSeparacaoItem.getQuantidadeEntregue() == 0) {\n            result.addError(new BusinessError(\"A quantidade é inválida\"));\n        }\n\n        if (requisicaoSeparacaoItem.getQuantidadeEntregue() > requisicaoSeparacaoItem.getRequisicaoItem().getQuantidadePendente()) {\n            result.addError(new BusinessError(\"A quantidade separada não pode exceder a quantidade pendente\"));\n        }\n\n        if (requisicaoSeparacaoItem.getQuantidadeEntregue() > requisicaoSeparacaoItem.getEstoque().getQuantidade()) {\n            result.addError(new BusinessError(\"A quantidade separada não pode exceder a quantidade disponível em estoque\"));\n        }\n\n        return this.result;\n    }\n}\n"
        }
    ]
}